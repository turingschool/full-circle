version: 2
jobs:
  build:
    docker:
       - image: circleci/ruby:2.4.1-node-browsers
         environment:
           - RAILS_ENV=test
           - RACK_ENV=test
       - image: circleci/postgres:10.0-alpine
         environment:
           - POSTGRES_USER=circleci
           - POSTGRES_DB=full_circle_app_test

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"
            bundle exec rake
      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

  deploy_staging:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - checkout
      - run:
          name: Deploy Master to Heroku Staging
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/turing-full-circle-staging.git master

  deploy_production:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - checkout
      - run:
          name: Deploy Master to Heroku Production
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/turing-full-circle.git master

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build
      - deploy_staging:
          filters:
            branches:
              only:
                - master
          requires:
            - build
      - hold:
          filters:
            branches:
              only:
                - master
          type: approval
          requires:
              - deploy_staging
      - deploy_production:
          filters:
            branches:
              only:
                - master
          requires:
              - hold
